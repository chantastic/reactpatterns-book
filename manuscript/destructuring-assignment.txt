# destructuring arguments

[Destructuring assignment](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment) is an ES2015 feature.  
It's not React specific
But it pairs nicely with `props` in [functional components](#functional-component)

These examples are equivalent.
```js
function Greeting(props) { return <strong>Hi {props.name}!</strong> }

function Greeting({ name }) { return <strong>Hi {name}!</strong> }
```

The [rest parameters syntax](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/rest_parameters) (`...`) allows us to collect the remaining properties in a new object.

```js
function Greeting({ name, ...props }) {
  return <strong>Hi {name}!</strong>
}
```

We can use [JSX Spread Attributes](#jsx-spread-attributes) to forward those `props` to the React Element.

```js
function Greeting({ name, ...props }) {
  return <strong {...props}>Hi {name}!</strong>
}
```